(($,Drupal,debounce,displace)=>{Drupal.offCanvas={position:null,minimumHeight:30,minDisplaceWidth:768,$mainCanvasWrapper:$('[data-off-canvas-main-canvas]'),isOffCanvas($element){return $element[0].id==='drupal-off-canvas'},removeOffCanvasEvents($element){$element.off('.off-canvas');$(document).off('.off-canvas');$(window).off('.off-canvas')},beforeCreate({settings,$element}){Drupal.offCanvas.removeOffCanvasEvents($element);$('body').addClass('js-off-canvas-dialog-open');settings.position={my:'left top',at:`${Drupal.offCanvas.getEdge()} top`,of:window,};const position=settings.drupalOffCanvasPosition;const height=position==='side'?$(window).height():settings.height;const width=position==='side'?settings.width:'100%';settings.height=height;settings.width=width},beforeClose({$element}){$('body').removeClass('js-off-canvas-dialog-open');Drupal.offCanvas.removeOffCanvasEvents($element);Drupal.offCanvas.resetPadding()},afterCreate({$element,settings}){const eventData={settings,$element,offCanvasDialog:this};$element.on('dialogContentResize.off-canvas',eventData,Drupal.offCanvas.handleDialogResize,).on('dialogContentResize.off-canvas',eventData,Drupal.offCanvas.bodyPadding,);Drupal.offCanvas.getContainer($element).attr(`data-offset-${Drupal.offCanvas.getEdge()}`,'');$(window).on('resize.off-canvas',eventData,debounce(Drupal.offCanvas.resetSize,100,!0),).trigger('resize.off-canvas')},render({settings}){$('.ui-dialog-off-canvas, .ui-dialog-off-canvas .ui-dialog-titlebar',).toggleClass('ui-dialog-empty-title',!settings.title);$('.ui-dialog-off-canvas').attr('id','drupal-off-canvas-wrapper')},handleDialogResize(event){const $element=event.data.$element;const $container=Drupal.offCanvas.getContainer($element);const $offsets=$container.find('> :not(#drupal-off-canvas, .ui-resizable-handle)',);let offset=0;$element[0].style.height='auto';const modalHeight=$container.height();$offsets.each((i,e)=>{offset+=$(e).outerHeight()});const scrollOffset=$element.outerHeight()-$element.height();$element.height(modalHeight-offset-scrollOffset)},resetSize(event){const $element=event.data.$element;const container=Drupal.offCanvas.getContainer($element);const position=event.data.settings.drupalOffCanvasPosition;if(Drupal.offCanvas.position&&Drupal.offCanvas.position!==position){container.removeAttr(`data-offset-${Drupal.offCanvas.position}`)}
if(position==='top'){$element[0].style.minHeight=`${Drupal.offCanvas.minimumHeight}px`}
displace();const offsets=displace.offsets;const topPosition=position==='side'&&offsets.top!==0?`+${offsets.top}`:'';const adjustedOptions={position:{my:`${Drupal.offCanvas.getEdge()} top`,at:`${Drupal.offCanvas.getEdge()} top${topPosition}`,of:window,},};const height=position==='side'?`${$(window).height() - (offsets.top + offsets.bottom)}px`:event.data.settings.height;Object.assign(container[0].style,{position:'fixed',height:Number.isNaN(parseFloat(height))?height:`${parseFloat(height)}px`,});$element.dialog('option',adjustedOptions);$element?.get(0)?.dispatchEvent(new CustomEvent('dialogContentResize',{bubbles:!0}),);Drupal.offCanvas.position=position},bodyPadding(event){const position=event.data.settings.drupalOffCanvasPosition;if(position==='side'&&$('body').outerWidth()<Drupal.offCanvas.minDisplaceWidth){return}
Drupal.offCanvas.resetPadding();const $element=event.data.$element;const $container=Drupal.offCanvas.getContainer($element);const mainCanvasWrapper=Drupal.offCanvas.$mainCanvasWrapper[0];const width=$container.outerWidth();const mainCanvasPadding=window.getComputedStyle(mainCanvasWrapper)[`padding-${Drupal.offCanvas.getEdge()}`];if(position==='side'&&width!==mainCanvasPadding){mainCanvasWrapper.style[`padding-${Drupal.offCanvas.getEdge()}`]=`${width}px`;$container.attr(`data-offset-${Drupal.offCanvas.getEdge()}`,width);$container.attr('data-offset-top',0);displace()}
const height=$container.outerHeight();if(position==='top'){mainCanvasWrapper.style.paddingTop=`${height}px`;$container.attr('data-offset-top',height);$container.attr(`data-offset-${Drupal.offCanvas.getEdge()}`,0);displace()}},getContainer($element){return $element.dialog('widget')},getEdge(){return document.documentElement.dir==='rtl'?'left':'right'},resetPadding(){Drupal.offCanvas.$mainCanvasWrapper[0].style[`padding-${Drupal.offCanvas.getEdge()}`]=0;Drupal.offCanvas.$mainCanvasWrapper[0].style.paddingTop=0;displace()},};Drupal.behaviors.offCanvasEvents={attach:()=>{if(!once('off-canvas','html').length){return}
window.addEventListener('dialog:beforecreate',(e)=>{const $element=$(e.target);if(Drupal.offCanvas.isOffCanvas($element)){Drupal.offCanvas.beforeCreate({$element,settings:e.settings,})}});window.addEventListener('dialog:aftercreate',(e)=>{const $element=$(e.target);if(Drupal.offCanvas.isOffCanvas($element)){Drupal.offCanvas.render({$element,dialog:e.dialog,settings:e.settings,});Drupal.offCanvas.afterCreate({$element,settings:e.settings,})}});window.addEventListener('dialog:beforeclose',(e)=>{const $element=$(e.target);if(Drupal.offCanvas.isOffCanvas($element)){Drupal.offCanvas.beforeClose({$element,})}})},}})(jQuery,Drupal,Drupal.debounce,Drupal.displace)