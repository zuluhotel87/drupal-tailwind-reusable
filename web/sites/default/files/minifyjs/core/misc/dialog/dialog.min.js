class DrupalDialogEvent extends Event{constructor(type,dialog,settings=null){super(`dialog:${type}`,{bubbles:!0});this.dialog=dialog;this.settings=settings}}(function($,Drupal,drupalSettings,bodyScrollLock){drupalSettings.dialog={autoOpen:!0,buttonClass:'button',buttonPrimaryClass:'button--primary',close(event){Drupal.dialog(event.target).close();Drupal.detachBehaviors(event.target,null,'unload')},};Drupal.dialog=function(element,options){let undef;const $element=$(element);const domElement=$element.get(0);const dialog={open:!1,returnValue:undef,};function openDialog(settings){settings=$.extend({},drupalSettings.dialog,options,settings);if(settings.dialogClass){Drupal.deprecationError({message:'dialogClass is deprecated in drupal:10.4.x and will be removed from drupal:12.0.0.',})}
const event=new DrupalDialogEvent('beforecreate',dialog,settings);domElement.dispatchEvent(event);$element.dialog(event.settings);dialog.open=!0;if(event.settings.modal){bodyScrollLock.lock(domElement)}
domElement.dispatchEvent(new DrupalDialogEvent('aftercreate',dialog,event.settings),)}
function closeDialog(value){domElement.dispatchEvent(new DrupalDialogEvent('beforeclose',dialog));bodyScrollLock.clearBodyLocks();$element.dialog('close');dialog.returnValue=value;dialog.open=!1;domElement.dispatchEvent(new DrupalDialogEvent('afterclose',dialog))}
dialog.show=()=>{openDialog({modal:!1})};dialog.showModal=()=>{openDialog({modal:!0})};dialog.close=closeDialog;return dialog}})(jQuery,Drupal,drupalSettings,bodyScrollLock)