(function($,Drupal){const states={postponed:[],};Drupal.states=states;function invert(a,invertState){return invertState&&typeof a!=='undefined'?!a:a}
function compare(a,b){if(a===b){return typeof a==='undefined'?a:!0}
return typeof a==='undefined'||typeof b==='undefined'}
function ternary(a,b){if(typeof a==='undefined'){return b}
if(typeof b==='undefined'){return a}
return a&&b}
Drupal.behaviors.states={attach(context,settings){const elements=once('states','[data-drupal-states]',context);const il=elements.length;for(let i=0;i<il;i++){const config=JSON.parse(elements[i].getAttribute('data-drupal-states'),);Object.keys(config||{}).forEach((state)=>{new states.Dependent({element:$(elements[i]),state:states.State.sanitize(state),constraints:config[state],})})}
while(states.postponed.length){states.postponed.shift()()}},};states.Dependent=function(args){$.extend(this,{values:{},oldValue:null},args);this.dependees=this.getDependees();Object.keys(this.dependees||{}).forEach((selector)=>{this.initializeDependee(selector,this.dependees[selector])})};states.Dependent.comparisons={RegExp(reference,value){return reference.test(value)},Function(reference,value){return reference(value)},Array(reference,value){if(!Array.isArray(value)){return!1}
return JSON.stringify(reference.sort())===JSON.stringify(value.sort())},Number(reference,value){return typeof value==='string'?compare(reference.toString(),value):compare(reference,value)},};states.Dependent.prototype={initializeDependee(selector,dependeeStates){this.values[selector]={};Object.keys(dependeeStates).forEach((i)=>{let state=dependeeStates[i];if($.inArray(state,dependeeStates)===-1){return}
state=states.State.sanitize(state);this.values[selector][state.name]=null;$(selector).on(`state:${state}`,{selector,state},(e)=>{this.update(e.data.selector,e.data.state,e.value)});new states.Trigger({selector,state})})},compare(reference,selector,state){const value=this.values[selector][state.name];if(reference.constructor.name in states.Dependent.comparisons){return states.Dependent.comparisons[reference.constructor.name](reference,value,)}
return compare(reference,value)},update(selector,state,value){if(value!==this.values[selector][state.name]){this.values[selector][state.name]=value;this.reevaluate()}},reevaluate(){let value=this.verifyConstraints(this.constraints);if(value!==this.oldValue){this.oldValue=value;value=invert(value,this.state.invert);this.element.trigger({type:`state:${this.state}`,value,trigger:!0,})}},verifyConstraints(constraints,selector){let result;if(Array.isArray(constraints)){const hasXor=$.inArray('xor',constraints)===-1;const len=constraints.length;for(let i=0;i<len;i++){if(constraints[i]!=='xor'){const constraint=this.checkConstraints(constraints[i],selector,i,);if(constraint&&(hasXor||result)){return hasXor}
result=result||constraint}}}else if($.isPlainObject(constraints)){for(const n in constraints){if(constraints.hasOwnProperty(n)){result=ternary(result,this.checkConstraints(constraints[n],selector,n),);if(result===!1){return!1}}}}
return result},checkConstraints(value,selector,state){if(typeof state!=='string'||/[0-9]/.test(state[0])){state=null}else if(typeof selector==='undefined'){selector=state;state=null}
if(state!==null){state=states.State.sanitize(state);return invert(this.compare(value,selector,state),state.invert)}
return this.verifyConstraints(value,selector)},getDependees(){const cache={};const _compare=this.compare;this.compare=function(reference,selector,state){(cache[selector]||(cache[selector]=[])).push(state.name)};this.verifyConstraints(this.constraints);this.compare=_compare;return cache},};states.Trigger=function(args){$.extend(this,args);if(this.state in states.Trigger.states){this.element=$(this.selector);if(!this.element.data(`trigger:${this.state}`)){this.initialize()}}};states.Trigger.prototype={initialize(){const trigger=states.Trigger.states[this.state];if(typeof trigger==='function'){trigger.call(window,this.element)}else{Object.keys(trigger||{}).forEach((event)=>{this.defaultTrigger(event,trigger[event])})}
this.element.data(`trigger:${this.state}`,!0)},defaultTrigger(event,valueFn){let oldValue=valueFn.call(this.element);this.element.on(event,function(e){const value=valueFn.call(this.element,e);if(oldValue!==value){this.element.trigger({type:`state:${this.state}`,value,oldValue,});oldValue=value}}.bind(this),);states.postponed.push(function(){this.element.trigger({type:`state:${this.state}`,value:oldValue,oldValue:null,})}.bind(this),)},};states.Trigger.states={empty:{keyup(){return this.val()===''},change(){return this.val()===''},},checked:{change(){let checked=!1;this.each(function(){checked=$(this).prop('checked');return!checked});return checked},},value:{keyup(){if(this.length>1){return this.filter(':checked').val()||!1}
return this.val()},change(){if(this.length>1){return this.filter(':checked').val()||!1}
return this.val()},},collapsed:{collapsed(e){return typeof e!=='undefined'&&'value' in e?e.value:!this[0].hasAttribute('open')},},};states.State=function(state){this.pristine=state;this.name=state;let process=!0;do{while(this.name.charAt(0)==='!'){this.name=this.name.substring(1);this.invert=!this.invert}
if(this.name in states.State.aliases){this.name=states.State.aliases[this.name]}else{process=!1}}while(process);};states.State.sanitize=function(state){if(state instanceof states.State){return state}
return new states.State(state)};states.State.aliases={enabled:'!disabled',invisible:'!visible',invalid:'!valid',untouched:'!touched',optional:'!required',filled:'!empty',unchecked:'!checked',irrelevant:'!relevant',expanded:'!collapsed',open:'!collapsed',closed:'collapsed',readwrite:'!readonly',};states.State.prototype={invert:!1,toString(){return this.name},};const $document=$(document);$document.on('state:disabled',(e)=>{const tagsSupportDisable='button, fieldset, optgroup, option, select, textarea, input';if(e.trigger){$(e.target).closest('.js-form-item, .js-form-submit, .js-form-wrapper').toggleClass('form-disabled',e.value).find(tagsSupportDisable).addBack(tagsSupportDisable).prop('disabled',e.value)}});$document.on('state:readonly',(e)=>{if(e.trigger){$(e.target).closest('.js-form-item, .js-form-submit, .js-form-wrapper').toggleClass('form-readonly',e.value).find('input, textarea').prop('readonly',e.value)}});$document.on('state:required',(e)=>{if(e.trigger){if(e.value){const label=`label${e.target.id ? `[for=${e.target.id}]` : ''}`;const $label=$(e.target).attr({required:'required','aria-required':'true'}).closest('.js-form-item, .js-form-wrapper').find(label);if(!$label.hasClass('js-form-required').length){$label.addClass('js-form-required form-required')}}else{$(e.target).removeAttr('required aria-required').closest('.js-form-item, .js-form-wrapper').find('label.js-form-required').removeClass('js-form-required form-required')}}});$document.on('state:visible',(e)=>{if(e.trigger){let $element=$(e.target).closest('.js-form-item, .js-form-submit, .js-form-wrapper',);if(e.target.tagName==='A'){$element=$(e.target)}
$element.toggle(e.value)}});$document.on('state:checked',(e)=>{if(e.trigger){$(e.target).closest('.js-form-item, .js-form-wrapper').find('input').prop('checked',e.value).trigger('change')}});$document.on('state:collapsed',(e)=>{if(e.trigger){if(e.target.hasAttribute('open')===e.value){$(e.target).find('> summary').trigger('click')}}})})(jQuery,Drupal)