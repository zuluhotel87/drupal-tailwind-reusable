import{Plugin}from 'ckeditor5/src/core';const _fetchMetadata=async(url)=>{const response=await fetch(url);if(response.ok){return JSON.parse(await response.text())}
throw new Error('Fetching media embed metadata from the server failed.')};export default class DrupalMediaMetadataRepository extends Plugin{init(){this._data=new WeakMap()}
getMetadata(modelElement){if(this._data.get(modelElement)){return new Promise((resolve)=>{resolve(this._data.get(modelElement))})}
const options=this.editor.config.get('drupalMedia');if(!options){return new Promise((resolve,reject)=>{reject(new Error('drupalMedia configuration is required for parsing metadata.',),)})}
if(!modelElement.hasAttribute('drupalMediaEntityUuid')){return new Promise((resolve,reject)=>{reject(new Error('drupalMedia element must have drupalMediaEntityUuid attribute to retrieve metadata.',),)})}
const{metadataUrl}=options;const query=new URLSearchParams({uuid:modelElement.getAttribute('drupalMediaEntityUuid'),});const url=`${metadataUrl}&${query}`;return _fetchMetadata(url).then((metadata)=>{this._data.set(modelElement,metadata);return metadata})}
static get pluginName(){return'DrupalMediaMetadataRepository'}}