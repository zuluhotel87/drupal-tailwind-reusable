import{isWidget}from 'ckeditor5/src/widget';export function isDrupalMedia(modelElement){return!!modelElement&&modelElement.is('element','drupalMedia')}
export function isDrupalMediaWidget(viewElement){return(isWidget(viewElement)&&!!viewElement.getCustomProperty('drupalMedia'))}
export function getClosestSelectedDrupalMediaElement(selection){const selectedElement=selection.getSelectedElement();return isDrupalMedia(selectedElement)?selectedElement:selection.getFirstPosition().findAncestor('drupalMedia')}
export function getClosestSelectedDrupalMediaWidget(selection){const viewElement=selection.getSelectedElement();if(viewElement&&isDrupalMediaWidget(viewElement)){return viewElement}
if(selection.getFirstPosition()===null){return null}
let parent=selection.getFirstPosition().parent;while(parent){if(parent.is('element')&&isDrupalMediaWidget(parent)){return parent}
parent=parent.parent}
return null}
export function isObject(value){const type=typeof value;return value!=null&&(type==='object'||type==='function')}
export function getPreviewContainer(children){for(const child of children){if(child.hasAttribute('data-drupal-media-preview')){return child}
if(child.childCount){const recursive=getPreviewContainer(child.getChildren());if(recursive){return recursive}}}
return null}
export function groupNameToModelAttributeKey(group){const capitalizedFirst=group[0].toUpperCase()+group.substring(1);return `drupalElementStyle${capitalizedFirst}`}