import{Plugin}from 'ckeditor5/src/core';import ImageTextAlternativeCommand from '@ckeditor/ckeditor5-image/src/imagetextalternative/imagetextalternativecommand';export default class DrupalImageTextAlternativeEditing extends Plugin{static get requires(){return['ImageUtils']}
static get pluginName(){return'DrupalImageAlternativeTextEditing'}
constructor(editor){super(editor);this._missingAltTextViewReferences=new Set()}
init(){const editor=this.editor;editor.conversion.for('editingDowncast').add(this._imageEditingDowncastConverter('attribute:alt',editor)).add(this._imageEditingDowncastConverter('attribute:src',editor));editor.commands.add('imageTextAlternative',new ImageTextAlternativeCommand(this.editor),);editor.editing.view.on('render',()=>{for(const view of this._missingAltTextViewReferences){if(!view.button.element.isConnected){view.destroy();this._missingAltTextViewReferences.delete(view)}}})}
_imageEditingDowncastConverter(eventName){const converter=(evt,data,conversionApi)=>{const editor=this.editor;const imageUtils=editor.plugins.get('ImageUtils');if(!imageUtils.isImage(data.item)){return}
const viewElement=conversionApi.mapper.toViewElement(data.item);const existingWarning=Array.from(viewElement.getChildren()).find((child)=>child.getCustomProperty('drupalImageMissingAltWarning'),);const hasAlt=data.item.hasAttribute('alt');if(hasAlt){if(existingWarning){conversionApi.writer.remove(existingWarning)}
return}
if(existingWarning){return}
const view=editor.ui.componentFactory.create('drupalImageAlternativeTextMissing',);view.listenTo(editor.ui,'update',()=>{const selectionRange=editor.model.document.selection.getFirstRange();const imageRange=editor.model.createRangeOn(data.item);view.set({isSelected:selectionRange.containsRange(imageRange)||selectionRange.isIntersecting(imageRange),})});view.render();this._missingAltTextViewReferences.add(view);const html=conversionApi.writer.createUIElement('span',{class:'image-alternative-text-missing-wrapper',},function(domDocument){const wrapperDomElement=this.toDomElement(domDocument);wrapperDomElement.appendChild(view.element);return wrapperDomElement},);conversionApi.writer.setCustomProperty('drupalImageMissingAltWarning',!0,html,);conversionApi.writer.insert(conversionApi.writer.createPositionAt(viewElement,'end'),html,)};return(dispatcher)=>{dispatcher.on(eventName,converter,{priority:'low'})}}}