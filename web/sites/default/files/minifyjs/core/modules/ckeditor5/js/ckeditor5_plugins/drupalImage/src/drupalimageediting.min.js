import{Plugin}from 'ckeditor5/src/core';import{setViewAttributes}from '@ckeditor/ckeditor5-html-support/src/utils';import ImageLoadObserver from '@ckeditor/ckeditor5-image/src/image/imageloadobserver';function createImageViewElement(writer){return writer.createEmptyElement('img')}
function isNumberString(value){const parsedValue=parseFloat(value);return!Number.isNaN(parsedValue)&&value===String(parsedValue)}
function downcastPxOrPct(value){if(typeof value==='string'&&value.endsWith('%')){return value}
return `${parseInt(value, 10)}`}
function modelEntityUuidToDataAttribute(){function converter(event,data,conversionApi){const{item}=data;const{consumable,writer}=conversionApi;if(!consumable.consume(item,event.name)){return}
const viewElement=conversionApi.mapper.toViewElement(item);const imageInFigure=Array.from(viewElement.getChildren()).find((child)=>child.name==='img',);writer.setAttribute('data-entity-uuid',data.attributeNewValue,imageInFigure||viewElement,)}
return(dispatcher)=>{dispatcher.on('attribute:dataEntityUuid',converter)}}
const alignmentMapping=[{modelValue:'alignCenter',dataValue:'center',},{modelValue:'alignRight',dataValue:'right',},{modelValue:'alignLeft',dataValue:'left',},];function viewCaptionToCaptionAttribute(editor){return(dispatcher)=>{dispatcher.on('insert:caption',(event,data,conversionApi)=>{const{consumable,writer,mapper}=conversionApi;const imageUtils=editor.plugins.get('ImageUtils');if(!imageUtils.isImage(data.item.parent)||!consumable.consume(data.item,'insert')){return}
const range=editor.model.createRangeIn(data.item);const viewDocumentFragment=writer.createDocumentFragment();mapper.bindElements(data.item,viewDocumentFragment);for(const{item}of Array.from(range)){const itemData={item,range:editor.model.createRangeOn(item),};const eventName=`insert:${item.name || '$text'}`;editor.data.downcastDispatcher.fire(eventName,itemData,conversionApi,);for(const key of item.getAttributeKeys()){Object.assign(itemData,{attributeKey:key,attributeOldValue:null,attributeNewValue:itemData.item.getAttribute(key),});editor.data.downcastDispatcher.fire(`attribute:${key}`,itemData,conversionApi,)}}
for(const child of writer.createRangeIn(viewDocumentFragment).getItems()){mapper.unbindViewElement(child)}
mapper.unbindViewElement(viewDocumentFragment);const captionText=editor.data.processor.toData(viewDocumentFragment);if(captionText){const imageViewElement=mapper.toViewElement(data.item.parent);writer.setAttribute('data-caption',captionText,imageViewElement)}},{priority:'high'},)}}
function modelEntityTypeToDataAttribute(){function converter(event,data,conversionApi){const{item}=data;const{consumable,writer}=conversionApi;if(!consumable.consume(item,event.name)){return}
const viewElement=conversionApi.mapper.toViewElement(item);const imageInFigure=Array.from(viewElement.getChildren()).find((child)=>child.name==='img',);writer.setAttribute('data-entity-type',data.attributeNewValue,imageInFigure||viewElement,)}
return(dispatcher)=>{dispatcher.on('attribute:dataEntityType',converter)}}
function modelImageStyleToDataAttribute(){function converter(event,data,conversionApi){const{item}=data;const{consumable,writer}=conversionApi;const mappedAlignment=alignmentMapping.find((value)=>value.modelValue===data.attributeNewValue,);if(!mappedAlignment||!consumable.consume(item,event.name)){return}
const viewElement=conversionApi.mapper.toViewElement(item);const imageInFigure=Array.from(viewElement.getChildren()).find((child)=>child.name==='img',);writer.setAttribute('data-align',mappedAlignment.dataValue,imageInFigure||viewElement,)}
return(dispatcher)=>{dispatcher.on('attribute:imageStyle',converter,{priority:'high'})}}
function viewImageToModelImage(editor){function converter(event,data,conversionApi){const{viewItem}=data;const{writer,consumable,safeInsert,updateConversionResult,schema}=conversionApi;const attributesToConsume=[];let image;if(!consumable.test(viewItem,{name:!0,attributes:'src'})){return}
const hasDataCaption=consumable.test(viewItem,{name:!0,attributes:'data-caption',});if(schema.checkChild(data.modelCursor,'imageInline')&&!hasDataCaption){image=writer.createElement('imageInline',{src:viewItem.getAttribute('src'),})}else{image=writer.createElement('imageBlock',{src:viewItem.getAttribute('src'),})}
if(editor.plugins.has('ImageStyleEditing')&&consumable.test(viewItem,{name:!0,attributes:'data-align'})){const dataAlign=viewItem.getAttribute('data-align');const mappedAlignment=alignmentMapping.find((value)=>value.dataValue===dataAlign,);if(mappedAlignment){writer.setAttribute('imageStyle',mappedAlignment.modelValue,image);attributesToConsume.push('data-align')}}
if(hasDataCaption){const caption=writer.createElement('caption');const viewFragment=editor.data.processor.toView(viewItem.getAttribute('data-caption'),);conversionApi.consumable.constructor.createFrom(viewFragment,conversionApi.consumable,);conversionApi.convertChildren(viewFragment,caption);writer.append(caption,image);attributesToConsume.push('data-caption')}
if(consumable.test(viewItem,{name:!0,attributes:'data-entity-uuid'})){writer.setAttribute('dataEntityUuid',viewItem.getAttribute('data-entity-uuid'),image,);attributesToConsume.push('data-entity-uuid')}
if(consumable.test(viewItem,{name:!0,attributes:'data-entity-type'})){writer.setAttribute('dataEntityType',viewItem.getAttribute('data-entity-type'),image,);attributesToConsume.push('data-entity-type')}
if(!safeInsert(image,data.modelCursor)){return}
consumable.consume(viewItem,{name:!0,attributes:attributesToConsume,});updateConversionResult(image,data)}
return(dispatcher)=>{dispatcher.on('element:img',converter,{priority:'high'})}}
function upcastImageBlockLinkGhsAttributes(dataFilter){function converter(event,data,conversionApi){if(!data.modelRange){return}
const viewImageElement=data.viewItem;const viewContainerElement=viewImageElement.parent;if(!viewContainerElement.is('element','a')){return}
if(!data.modelRange.getContainedElement().is('element','imageBlock')){return}
const viewAttributes=dataFilter.processViewAttributes(viewContainerElement,conversionApi,);if(viewAttributes){conversionApi.writer.setAttribute('htmlLinkAttributes',viewAttributes,data.modelRange,)}}
return(dispatcher)=>{dispatcher.on('element:img',converter,{priority:'high',})}}
function downcastBlockImageLink(){function converter(event,data,conversionApi){if(!conversionApi.consumable.consume(data.item,event.name)){return}
const image=conversionApi.mapper.toViewElement(data.item);const writer=conversionApi.writer;const linkElement=writer.createContainerElement('a',{href:data.attributeNewValue,});writer.insert(writer.createPositionBefore(image),linkElement);writer.move(writer.createRangeOn(image),writer.createPositionAt(linkElement,0),);if(conversionApi.consumable.consume(data.item,'attribute:htmlLinkAttributes:imageBlock',)){setViewAttributes(conversionApi.writer,data.item.getAttribute('htmlLinkAttributes'),linkElement,)}}
return(dispatcher)=>{dispatcher.on('attribute:linkHref:imageBlock',converter,{priority:'high',})}}
export default class DrupalImageEditing extends Plugin{static get requires(){return['ImageUtils']}
static get pluginName(){return'DrupalImageEditing'}
init(){const{editor}=this;const{conversion}=editor;const{schema}=editor.model;if(schema.isRegistered('imageInline')){schema.extend('imageInline',{allowAttributes:['dataEntityUuid','dataEntityType','isDecorative'],})}
if(schema.isRegistered('imageBlock')){schema.extend('imageBlock',{allowAttributes:['dataEntityUuid','dataEntityType','isDecorative'],})}
conversion.for('upcast').add(viewImageToModelImage(editor)).attributeToAttribute({view:{name:'img',key:'width',},model:{key:'resizedWidth',value:(viewElement)=>{if(isNumberString(viewElement.getAttribute('width'))){return `${parseInt(viewElement.getAttribute('width'), 10)}px`}
return viewElement.getAttribute('width').trim()},},}).attributeToAttribute({view:{name:'img',key:'height',},model:{key:'resizedHeight',value:(viewElement)=>{if(isNumberString(viewElement.getAttribute('height'))){return `${parseInt(viewElement.getAttribute('height'), 10)}px`}
return viewElement.getAttribute('height').trim()},},});if(editor.plugins.has('DataFilter')){const dataFilter=editor.plugins.get('DataFilter');conversion.for('upcast').add(upcastImageBlockLinkGhsAttributes(dataFilter))}
conversion.for('downcast').add(modelEntityUuidToDataAttribute()).add(modelEntityTypeToDataAttribute());conversion.for('dataDowncast').add(viewCaptionToCaptionAttribute(editor)).elementToElement({model:'imageBlock',view:(modelElement,{writer})=>createImageViewElement(writer,'imageBlock'),converterPriority:'high',}).elementToElement({model:'imageInline',view:(modelElement,{writer})=>createImageViewElement(writer,'imageInline'),converterPriority:'high',}).add(modelImageStyleToDataAttribute()).add(downcastBlockImageLink()).attributeToAttribute({model:{name:'imageBlock',key:'resizedWidth',},view:(attributeValue)=>({key:'width',value:downcastPxOrPct(attributeValue),}),converterPriority:'high',}).attributeToAttribute({model:{name:'imageInline',key:'resizedWidth',},view:(attributeValue)=>({key:'width',value:downcastPxOrPct(attributeValue),}),converterPriority:'high',}).attributeToAttribute({model:{name:'imageBlock',key:'resizedHeight',},view:(attributeValue)=>({key:'height',value:downcastPxOrPct(attributeValue),}),converterPriority:'high',}).attributeToAttribute({model:{name:'imageInline',key:'resizedHeight',},view:(attributeValue)=>({key:'height',value:downcastPxOrPct(attributeValue),}),converterPriority:'high',}).attributeToAttribute({model:{name:'imageBlock',key:'width',},view:(attributeValue,{consumable},data)=>{if(data.item.hasAttribute('resizedWidth')){consumable.consume(data.item,'attribute:width');return null}
return{key:'width',value:attributeValue,}},converterPriority:'high',}).attributeToAttribute({model:{name:'imageInline',key:'width',},view:(attributeValue,{consumable},data)=>{if(data.item.hasAttribute('resizedWidth')){consumable.consume(data.item,'attribute:width');return null}
return{key:'width',value:attributeValue,}},converterPriority:'high',}).attributeToAttribute({model:{name:'imageBlock',key:'height',},view:(attributeValue,conversionApi,data)=>{if(data.item.hasAttribute('resizedWidth')){if(data.item.getAttribute('resizedWidth').endsWith('%')){return{key:'height',value:data.item.getAttribute('resizedWidth'),}}
const resizedWidth=parseInt(data.item.getAttribute('resizedWidth'),10,);const naturalWidth=parseInt(data.item.getAttribute('width'),10);const naturalHeight=parseInt(attributeValue,10);const aspectRatio=naturalWidth/naturalHeight;return{key:'height',value:`${Math.round(resizedWidth / aspectRatio)}`,}}
return{key:'height',value:attributeValue,}},converterPriority:'high',}).attributeToAttribute({model:{name:'imageInline',key:'height',},view:(attributeValue,conversionApi,data)=>{if(data.item.hasAttribute('resizedWidth')){if(data.item.getAttribute('resizedWidth').endsWith('%')){return{key:'height',value:data.item.getAttribute('resizedWidth'),}}
const resizedWidth=parseInt(data.item.getAttribute('resizedWidth'),10,);const naturalWidth=parseInt(data.item.getAttribute('width'),10);const naturalHeight=parseInt(attributeValue,10);const aspectRatio=naturalWidth/naturalHeight;return{key:'height',value:`${Math.round(resizedWidth / aspectRatio)}`,}}
return{key:'height',value:attributeValue,}},converterPriority:'high',});editor.editing.view.addObserver(ImageLoadObserver);const imageUtils=editor.plugins.get('ImageUtils');editor.editing.view.document.on('imageLoaded',(evt,domEvent)=>{const imgViewElement=editor.editing.view.domConverter.mapDomToView(domEvent.target,);if(!imgViewElement){return}
const viewElement=imageUtils.getImageWidgetFromImageView(imgViewElement);if(!viewElement){return}
const modelElement=editor.editing.mapper.toModelElement(viewElement);if(!modelElement){return}
editor.model.enqueueChange({isUndoable:!1},()=>{imageUtils.setImageNaturalSizeAttributes(modelElement)})})}}