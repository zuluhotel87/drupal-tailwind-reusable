import{Plugin}from 'ckeditor5/src/core';import{setViewAttributes}from '@ckeditor/ckeditor5-html-support/src/utils';function viewToModelDrupalMediaAttributeConverter(dataFilter){return(dispatcher)=>{dispatcher.on('element:drupal-media',(evt,data,conversionApi)=>{function preserveElementAttributes(viewElement,attributeName){const viewAttributes=dataFilter.processViewAttributes(viewElement,conversionApi,);if(viewAttributes){conversionApi.writer.setAttribute(attributeName,viewAttributes,data.modelRange,)}}
function preserveLinkAttributes(linkElement){preserveElementAttributes(linkElement,'htmlLinkAttributes')}
const viewMediaElement=data.viewItem;const viewContainerElement=viewMediaElement.parent;preserveElementAttributes(viewMediaElement,'htmlAttributes');if(viewContainerElement.is('element','a')){preserveLinkAttributes(viewContainerElement)}},{priority:'low'},)}}
function getDescendantElement(writer,containerElement,elementName){const range=writer.createRangeOn(containerElement);for(const{item}of range.getWalker()){if(item.is('element',elementName)){return item}}}
function modelToDataAttributeConverter(evt,data,conversionApi){if(!conversionApi.consumable.consume(data.item,evt.name)){return}
const viewElement=conversionApi.mapper.toViewElement(data.item);setViewAttributes(conversionApi.writer,data.attributeNewValue,viewElement)}
function modelToEditingViewAttributeConverter(){return(dispatcher)=>{dispatcher.on('attribute:linkHref:drupalMedia',(evt,data,conversionApi)=>{if(!conversionApi.consumable.consume(data.item,'attribute:htmlLinkAttributes:drupalMedia',)){return}
const containerElement=conversionApi.mapper.toViewElement(data.item);const viewElement=getDescendantElement(conversionApi.writer,containerElement,'a',);setViewAttributes(conversionApi.writer,data.item.getAttribute('htmlLinkAttributes'),viewElement,)},{priority:'low'},)}}
function modelToDataViewAttributeConverter(){return(dispatcher)=>{dispatcher.on('attribute:linkHref:drupalMedia',(evt,data,conversionApi)=>{if(!conversionApi.consumable.consume(data.item,'attribute:htmlLinkAttributes:drupalMedia',)){return}
const mediaElement=conversionApi.mapper.toViewElement(data.item);const linkElement=mediaElement.parent;setViewAttributes(conversionApi.writer,data.item.getAttribute('htmlLinkAttributes'),linkElement,)},{priority:'low'},);dispatcher.on('attribute:htmlAttributes:drupalMedia',modelToDataAttributeConverter,{priority:'low'},)}}
export default class DrupalMediaGeneralHtmlSupport extends Plugin{constructor(editor){super(editor);if(!editor.plugins.has('GeneralHtmlSupport')){return}
if(!editor.plugins.has('DataFilter')||!editor.plugins.has('DataSchema')){console.error('DataFilter and DataSchema plugins are required for Drupal Media to integrate with General HTML Support plugin.',)}
const{schema}=editor.model;const{conversion}=editor;const dataFilter=this.editor.plugins.get('DataFilter');const dataSchema=this.editor.plugins.get('DataSchema');dataSchema.registerBlockElement({model:'drupalMedia',view:'drupal-media',});dataFilter.on('register:drupal-media',(evt,definition)=>{if(definition.model!=='drupalMedia'){return}
schema.extend('drupalMedia',{allowAttributes:['htmlLinkAttributes','htmlAttributes'],});conversion.for('upcast').add(viewToModelDrupalMediaAttributeConverter(dataFilter));conversion.for('editingDowncast').add(modelToEditingViewAttributeConverter());conversion.for('dataDowncast').add(modelToDataViewAttributeConverter());evt.stop();})}
static get pluginName(){return'DrupalMediaGeneralHtmlSupport'}}