import{Plugin}from 'ckeditor5/src/core';import{LINK_KEYSTROKE}from '@ckeditor/ckeditor5-link/src/utils';import{ButtonView}from 'ckeditor5/src/ui';import linkIcon from '../../../../../icons/link.svg';export default class DrupalLinkMediaUI extends Plugin{static get requires(){return['LinkEditing','LinkUI','DrupalMediaEditing']}
static get pluginName(){return'DrupalLinkMediaUi'}
init(){const{editor}=this;const viewDocument=editor.editing.view.document;this.listenTo(viewDocument,'click',(evt,data)=>{if(this._isSelectedLinkedMedia(editor.model.document.selection)){data.preventDefault();evt.stop()}},{priority:'high'},);this._createToolbarLinkMediaButton()}
_createToolbarLinkMediaButton(){const{editor}=this;editor.ui.componentFactory.add('drupalLinkMedia',(locale)=>{const button=new ButtonView(locale);const plugin=editor.plugins.get('LinkUI');const linkCommand=editor.commands.get('link');button.set({isEnabled:!0,label:Drupal.t('Link media'),icon:linkIcon,keystroke:LINK_KEYSTROKE,tooltip:!0,isToggleable:!0,});button.bind('isEnabled').to(linkCommand,'isEnabled');button.bind('isOn').to(linkCommand,'value',(value)=>!!value);this.listenTo(button,'execute',()=>{if(this._isSelectedLinkedMedia(editor.model.document.selection)){plugin._addActionsView()}else{plugin._showUI(!0)}});return button})}
_isSelectedLinkedMedia(selection){const selectedModelElement=selection.getSelectedElement();return(!!selectedModelElement&&selectedModelElement.is('element','drupalMedia')&&selectedModelElement.hasAttribute('linkHref'))}}