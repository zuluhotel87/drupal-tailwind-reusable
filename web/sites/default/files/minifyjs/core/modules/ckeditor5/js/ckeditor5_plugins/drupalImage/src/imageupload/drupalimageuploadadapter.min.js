export default class DrupalImageUploadAdapter{constructor(loader,options){this.loader=loader;this.options=options}
upload(){return this.loader.file.then((file)=>new Promise((resolve,reject)=>{this._initRequest();this._initListeners(resolve,reject,file);this._sendRequest(file)}),)}
abort(){if(this.xhr){this.xhr.abort()}}
_initRequest(){this.xhr=new XMLHttpRequest();this.xhr.open('POST',this.options.uploadUrl,!0);this.xhr.responseType='json'}
_initListeners(resolve,reject,file){const xhr=this.xhr;const loader=this.loader;const genericErrorText=`Couldn't upload file: ${file.name}.`;xhr.addEventListener('error',()=>reject(genericErrorText));xhr.addEventListener('abort',()=>reject());xhr.addEventListener('load',()=>{const response=xhr.response;if(!response||response.error){return reject(response&&response.error&&response.error.message?response.error.message:genericErrorText,)}
resolve({response,urls:{default:response.url},})});if(xhr.upload){xhr.upload.addEventListener('progress',(evt)=>{if(evt.lengthComputable){loader.uploadTotal=evt.total;loader.uploaded=evt.loaded}})}}
_sendRequest(file){const headers=this.options.headers||{};const withCredentials=this.options.withCredentials||!1;Object.keys(headers).forEach((headerName)=>{this.xhr.setRequestHeader(headerName,headers[headerName])});this.xhr.withCredentials=withCredentials;const data=new FormData();data.append('upload',file);this.xhr.send(data)}}