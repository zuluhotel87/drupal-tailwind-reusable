import{Command}from 'ckeditor5/src/core';import{groupNameToModelAttributeKey}from './utils';function createDrupalMedia(writer,attributes){const drupalMedia=writer.createElement('drupalMedia',attributes);return drupalMedia}
export default class InsertDrupalMediaCommand extends Command{execute(attributes){const mediaEditing=this.editor.plugins.get('DrupalMediaEditing');const dataAttributeMapping=Object.entries(mediaEditing.attrs).reduce((result,[key,value])=>{result[value]=key;return result},{},);const modelAttributes=Object.keys(attributes).reduce((result,attribute)=>{if(dataAttributeMapping[attribute]){result[dataAttributeMapping[attribute]]=attributes[attribute]}
return result},{},);if(this.editor.plugins.has('DrupalElementStyleEditing')){const elementStyleEditing=this.editor.plugins.get('DrupalElementStyleEditing',);const{normalizedStyles}=elementStyleEditing;for(const group of Object.keys(normalizedStyles)){for(const style of elementStyleEditing.normalizedStyles[group]){if(attributes[style.attributeName]&&style.attributeValue===attributes[style.attributeName]){const modelAttribute=groupNameToModelAttributeKey(group);modelAttributes[modelAttribute]=style.name}}}}
this.editor.model.change((writer)=>{this.editor.model.insertObject(createDrupalMedia(writer,modelAttributes),)})}
refresh(){const model=this.editor.model;const selection=model.document.selection;const allowedIn=model.schema.findAllowedParent(selection.getFirstPosition(),'drupalMedia',);this.isEnabled=allowedIn!==null}}