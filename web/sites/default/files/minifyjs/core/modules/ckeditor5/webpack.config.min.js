const path=require('node:path');const fs=require('node:fs');const webpack=require('webpack');const TerserPlugin=require('terser-webpack-plugin');function getDirectories(srcpath){return fs.readdirSync(srcpath).filter((item)=>fs.statSync(path.join(srcpath,item)).isDirectory())}
const prodPluginBuilds=[];const devPluginBuilds=[];getDirectories(path.resolve(__dirname,'./js/ckeditor5_plugins')).forEach((dir)=>{const bc={mode:'production',optimization:{minimize:!0,minimizer:[new TerserPlugin({terserOptions:{format:{comments:!1,},},test:/\.js(\?.*)?$/i,extractComments:!1,}),],moduleIds:'named',},entry:{path:path.resolve(__dirname,'js/ckeditor5_plugins',dir,'src/index.js',),},output:{path:path.resolve(__dirname,'./js/build'),filename:`${dir}.js`,library:['CKEditor5',dir],libraryTarget:'umd',libraryExport:'default',},plugins:[new webpack.BannerPlugin('cspell:disable'),new webpack.DllReferencePlugin({manifest:require(path.resolve(__dirname,'../../node_modules/ckeditor5/build/ckeditor5-dll.manifest.json')),scope:'ckeditor5/src',name:'CKEditor5.dll',}),],module:{rules:[{test:/\.svg$/,type:'asset/source'}],},};const dev={...bc,mode:'development',optimization:{...bc.optimization,minimize:!1},devtool:!1};prodPluginBuilds.push(bc);devPluginBuilds.push(dev)});module.exports=(env,argv)=>{if(argv.mode==='development'){return devPluginBuilds}else{return prodPluginBuilds}}