import{Command}from 'ckeditor5/src/core';import{getClosestSelectedDrupalMediaElement,isDrupalMedia}from '../utils';import{getMediaCaptionFromModelSelection}from './utils';function getCaptionFromDrupalMediaModelElement(drupalMediaModelElement){for(const node of drupalMediaModelElement.getChildren()){if(!!node&&node.is('element','caption')){return node}}
return null}
export default class ToggleDrupalMediaCaptionCommand extends Command{refresh(){const selection=this.editor.model.document.selection;const selectedElement=selection.getSelectedElement();if(!selectedElement){this.isEnabled=!!getClosestSelectedDrupalMediaElement(selection);this.value=!!getMediaCaptionFromModelSelection(selection);return}
this.isEnabled=isDrupalMedia(selectedElement);if(!this.isEnabled){this.value=!1}else{this.value=!!getCaptionFromDrupalMediaModelElement(selectedElement)}}
execute(options={}){const{focusCaptionOnShow}=options;this.editor.model.change((writer)=>{if(this.value){this._hideDrupalMediaCaption(writer)}else{this._showDrupalMediaCaption(writer,focusCaptionOnShow)}})}
_showDrupalMediaCaption(writer,focusCaptionOnShow){const model=this.editor.model;const selection=model.document.selection;const mediaCaptionEditing=this.editor.plugins.get('DrupalMediaCaptionEditing',);const selectedMedia=getClosestSelectedDrupalMediaElement(selection);const savedCaption=mediaCaptionEditing._getSavedCaption(selectedMedia);const newCaptionElement=savedCaption||writer.createElement('caption');writer.append(newCaptionElement,selectedMedia);if(focusCaptionOnShow){writer.setSelection(newCaptionElement,'in')}}
_hideDrupalMediaCaption(writer){const editor=this.editor;const selection=editor.model.document.selection;const mediaCaptionEditing=editor.plugins.get('DrupalMediaCaptionEditing');let selectedElement=selection.getSelectedElement();let captionElement;if(selectedElement){captionElement=getCaptionFromDrupalMediaModelElement(selectedElement)}else{captionElement=getMediaCaptionFromModelSelection(selection);selectedElement=getClosestSelectedDrupalMediaElement(selection)}
mediaCaptionEditing._saveCaption(selectedElement,captionElement);writer.setSelection(selectedElement,'on');writer.remove(captionElement)}}