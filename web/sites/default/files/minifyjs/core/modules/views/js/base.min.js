(function($,Drupal,drupalSettings){Drupal.Views={};Drupal.Views.parseQueryString=function(query){const args={};if(query.includes('?')){query=query.substring(query.indexOf('?')+1)}
let pair;const pairs=query.split('&');for(let i=0;i<pairs.length;i++){pair=pairs[i].split('=');if(pair[0]!=='q'){if(pair[1]){args[decodeURIComponent(pair[0].replace(/\+/g,' '))]=decodeURIComponent(pair[1].replace(/\+/g,' '))}else{args[decodeURIComponent(pair[0].replace(/\+/g,' '))]=''}}}
return args};Drupal.Views.parseViewArgs=function(href,viewPath){const returnObj={};const path=Drupal.Views.getPath(href);const viewHref=Drupal.url(viewPath).substring(drupalSettings.path.baseUrl.length,);if(viewHref&&path.startsWith(`${viewHref}/`)){returnObj.view_args=decodeURIComponent(path.substring(viewHref.length+1,path.length),);returnObj.view_path=path}
return returnObj};Drupal.Views.pathPortion=function(href){const protocol=window.location.protocol;if(href.startsWith(protocol)){href=href.substring(href.indexOf('/',protocol.length+2))}
return href};Drupal.Views.getPath=function(href){href=Drupal.Views.pathPortion(href);href=href.substring(drupalSettings.path.baseUrl.length,href.length);if(href.startsWith('?q=')){href=href.substring(3,href.length)}
const chars=['#','?','&'];for(let i=0;i<chars.length;i++){if(href.includes(chars[i])){href=href.substring(0,href.indexOf(chars[i]))}}
return href}})(jQuery,Drupal,drupalSettings)