(function($,Drupal,Backbone,_){Drupal.contextualToolbar.AuralView=Backbone.View.extend({announcedOnce:!1,initialize(options){this.options=options;this.listenTo(this.model,'change',this.render);this.listenTo(this.model,'change:isViewing',this.manageTabbing);$(document).on('keyup',_.bind(this.onKeypress,this));this.manageTabbing()},render(){this.$el.find('button').attr('aria-pressed',!this.model.get('isViewing'));return this},manageTabbing(){let tabbingContext=this.model.get('tabbingContext');if(tabbingContext){if(tabbingContext.active){Drupal.announce(this.options.strings.tabbingReleased)}
tabbingContext.release()}
if(!this.model.get('isViewing')){tabbingContext=Drupal.tabbingManager.constrain($('.contextual-toolbar-tab, .contextual'),);this.model.set('tabbingContext',tabbingContext);this.announceTabbingConstraint();this.announcedOnce=!0}},announceTabbingConstraint(){const strings=this.options.strings;Drupal.announce(Drupal.formatString(strings.tabbingConstrained,{'@contextualsCount':Drupal.formatPlural(Drupal.contextual.collection.length,'@count contextual link','@count contextual links',),}),);Drupal.announce(strings.pressEsc)},onKeypress(event){if(!this.announcedOnce&&event.keyCode===9&&!this.model.get('isViewing')){this.announceTabbingConstraint();this.announcedOnce=!0}
if(event.keyCode===27){this.model.set('isViewing',!0)}},},)})(jQuery,Drupal,Backbone,_)