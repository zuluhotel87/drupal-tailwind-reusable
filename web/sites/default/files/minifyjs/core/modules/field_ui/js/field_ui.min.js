(function($,Drupal,drupalSettings,debounce){Drupal.behaviors.fieldUIFieldStorageAddForm={attach(context){const form=once('field_ui_add','[data-drupal-selector="field-ui-field-storage-add-form"]',context,);if(form.length){const $form=$(form);$form.find('.js-form-item-label label,'+'.js-form-item-field-name label,'+'.js-form-item-existing-storage-label label',).addClass('js-form-required form-required')}},};Drupal.behaviors.fieldUIDisplayOverview={attach(context,settings){once('field-display-overview','table#field-display-overview',context,).forEach((overview)=>{Drupal.fieldUIOverview.attach(overview,settings.fieldUIRowsData,Drupal.fieldUIDisplayOverview,)})},};const originalAjaxBeforeSend=Drupal.Ajax.prototype.beforeSend;Drupal.Ajax.prototype.beforeSend=function(){$('.field-config-edit-form [data-drupal-selector="edit-submit"]').prop('disabled',!0,);return originalAjaxBeforeSend.apply(this,arguments)};$(document).on('ajaxComplete',()=>{$('.field-config-edit-form [data-drupal-selector="edit-submit"]').prop('disabled',!1,)});Drupal.fieldUIOverview={attach(table,rowsData,rowHandlers){const tableDrag=Drupal.tableDrag[table.id];tableDrag.onDrop=this.onDrop;tableDrag.row.prototype.onSwap=this.onSwap;$(table).find('tr.draggable').each(function(){const row=this;if(row.id in rowsData){const data=rowsData[row.id];data.tableDrag=tableDrag;const rowHandler=new rowHandlers[data.rowHandler](row,data);$(row).data('fieldUIRowHandler',rowHandler)}})},onChange(){const $trigger=$(this);const $row=$trigger.closest('tr');if($trigger.closest('.ajax-new-content').length!==0){return}
const rowHandler=$row.data('fieldUIRowHandler');const refreshRows={};refreshRows[rowHandler.name]=$trigger.get(0);const region=rowHandler.getRegion();if(region!==rowHandler.region){const $fieldParent=$row.find('select.js-field-parent');if($fieldParent.length){$fieldParent[0].value=''}
$.extend(refreshRows,rowHandler.regionChange(region));rowHandler.region=region}
if($trigger.closest('.tabledrag-hide').length){const thisTableDrag=Drupal.tableDrag['field-display-overview'];const rowObject=new thisTableDrag.row($row[0],'',thisTableDrag.indentEnabled,thisTableDrag.maxDepth,!0,);rowObject.markChanged();rowObject.addChangedWarning()}else{Drupal.fieldUIOverview.AJAXRefreshRows(refreshRows)}},onDrop(){const dragObject=this;const row=dragObject.rowObject.element;const $row=$(row);const rowHandler=$row.data('fieldUIRowHandler');if(typeof rowHandler!=='undefined'){const regionRow=$row.prevAll('tr.region-message').get(0);const region=regionRow.className.replace(/([^ ]+[ ]+)*region-([^ ]+)-message([ ]+[^ ]+)*/,'$2',);if(region!==rowHandler.region){const refreshRows=rowHandler.regionChange(region);rowHandler.region=region;Drupal.fieldUIOverview.AJAXRefreshRows(refreshRows)}}},onSwap(draggedRow){const rowObject=this;$(rowObject.table).find('tr.region-message').each(function(){const $this=$(this);if($this.prev('tr').get(0)===rowObject.group[rowObject.group.length-1]){if(rowObject.method!=='keyboard'||rowObject.direction==='down'){rowObject.swap('after',this)}}
if($this.next('tr').length===0||!$this.next('tr')[0].matches('.draggable')){$this.removeClass('region-populated').addClass('region-empty')}else if(this.matches('.region-empty')){$this.removeClass('region-empty').addClass('region-populated')}})},AJAXRefreshRows(rows){const rowNames=[];const ajaxElements=[];Object.keys(rows||{}).forEach((rowName)=>{rowNames.push(rowName);ajaxElements.push(rows[rowName])});if(rowNames.length){$(ajaxElements).after(Drupal.theme.ajaxProgressThrobber());const $refreshRows=$('input[name=refresh_rows]');if($refreshRows.length){$refreshRows[0].value=rowNames.join(' ')}
once('edit-refresh','input[data-drupal-selector="edit-refresh"]',).forEach((input)=>{let returnFocus={drupalSelector:null,scrollY:null,};$(input).on('mousedown',()=>{returnFocus={drupalSelector:document.activeElement.hasAttribute('data-drupal-selector',)?document.activeElement.getAttribute('data-drupal-selector'):!1,scrollY:window.scrollY,}});input.addEventListener('focus',()=>{if(returnFocus.drupalSelector){document.querySelector(`[data-drupal-selector="${returnFocus.drupalSelector}"]`,).focus()}
window.scrollTo({top:returnFocus.scrollY,});returnFocus={}})});$('input[data-drupal-selector="edit-refresh"]').trigger('mousedown');$(ajaxElements).prop('disabled',!0)}},};Drupal.fieldUIDisplayOverview={};Drupal.fieldUIDisplayOverview.field=function(row,data){this.row=row;this.name=data.name;this.region=data.region;this.tableDrag=data.tableDrag;this.defaultPlugin=data.defaultPlugin;this.$pluginSelect=$(row).find('.field-plugin-type');this.$regionSelect=$(row).find('select.field-region');$(row).find('select, input').on('change',Drupal.fieldUIOverview.onChange);return this};Drupal.fieldUIDisplayOverview.field.prototype={getRegion(){if(this.$regionSelect.length){return this.$regionSelect[0].value}},regionChange(region){region=region.replace(/-/g,'_');if(this.$regionSelect.length){this.$regionSelect[0].value=region}
if(this.region==='hidden'){const pluginSelect=typeof this.$pluginSelect.find('option')[0]!=='undefined'?this.$pluginSelect.find('option')[0].value:undefined;const value=typeof this.defaultPlugin!=='undefined'?this.defaultPlugin:pluginSelect;if(typeof value!=='undefined'){if(this.$pluginSelect.length){this.$pluginSelect[0].value=value}}}
const refreshRows={};refreshRows[this.name]=this.$pluginSelect.get(0);return refreshRows},};Drupal.behaviors.tableFilterByText={attach(){const[input]=once('table-filter-text','.js-table-filter-text');if(!input){return}
const $table=$(input.getAttribute('data-table'));let $rows;let searching=!1;function filterRows(e){const query=e.target.value;function showRow(index,row){const sources=row.querySelectorAll('.form-item');let sourcesConcat='';sources.forEach((item)=>{sourcesConcat+=` ${item.textContent}`});const textMatch=sourcesConcat.toLowerCase().includes(query.toLowerCase());$(row).closest('tr').toggle(textMatch)}
if(query.length>0){searching=!0;$rows.each(showRow)}else if(searching){searching=!1;$rows.show()}}
function preventEnterKey(event){if(event.key==='Enter'){event.preventDefault();event.stopPropagation()}}
if($table.length){$rows=$table.find('tbody tr');$(input).on({keyup:debounce(filterRows,200),keydown:preventEnterKey,})}},};Drupal.behaviors.clickToSelect={attach(context){once('field-click-to-select','.js-click-to-select',context).forEach((clickToSelectEl)=>{const input=clickToSelectEl.querySelector('input');if(input){Drupal.behaviors.clickToSelect.clickHandler(clickToSelectEl,input)}
if(input.classList.contains('error')){clickToSelectEl.classList.add('error')}
if(input.checked){this.selectHandler(clickToSelectEl,input)}},)},clickHandler(clickToSelectEl,input){$(clickToSelectEl).on('click',(event)=>{const clickToSelect=event.target.closest('.js-click-to-select');this.selectHandler(clickToSelect,input);$(input).trigger('updateOptions')})},selectHandler(clickToSelect,input){$(input).on('focus',()=>clickToSelect.classList.add('focus'));$(input).on('blur',()=>clickToSelect.classList.remove('focus'));input.checked=!0;document.querySelectorAll('.js-click-to-select.selected').forEach((item)=>{item.classList.remove('selected')});clickToSelect.classList.add('selected');setTimeout(()=>{input.removeAttribute('disabled');input.focus()},0)},}})(jQuery,Drupal,drupalSettings,Drupal.debounce)