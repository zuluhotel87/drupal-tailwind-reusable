(function($,Drupal){'use strict';$.fn.paragraphsSortable=function(options){var retVal,args=arguments;this.each(function(){var $el=$(this),sortable=$el.data('sortable');if(!sortable&&(options instanceof Object||!options)){sortable=new Sortable(this,options);$el.data('sortable',sortable)}
if(sortable){if(options==='widget'){return sortable}else if(options==='destroy'){sortable.destroy();$el.removeData('sortable')}else if(typeof sortable[options]==='function'){retVal=sortable[options].apply(sortable,[].slice.call(args,1))}else if(options in sortable.options){retVal=sortable.option.apply(sortable,args)}}});return(retVal===void 0)?this:retVal};Drupal.behaviors.paragraphsDraggable={attach:function(context){$('.paragraphs-dragdrop__handle',context).on('click',function(event){event.preventDefault()});$('ul.paragraphs-dragdrop__list',context).each(function(i,item){$(item).paragraphsSortable({group:"paragraphs",sort:!0,handle:".paragraphs-dragdrop__handle",onMove:isAllowed,onEnd:function(evt){handleReorder(evt);endDragClasses()},onStart:startDragClasses,})});function handleReorder(evt){if(evt.from===evt.to){updateWeightsAndPath($(evt.to).children('li'))}else{updateWeightsAndPath($(evt.from).children('li'));updateWeightsAndPath($(evt.to).children('li'))}
endDragClasses()}
function updateWeightsAndPath($items){$items.each(function(index,value){var $currentItem=$(value);var $weight=$currentItem.find('.paragraphs-dragdrop__weight:first');$weight.val(index);updatePaths($currentItem,$currentItem.parent());$currentItem.find('> div > ul').each(function(){updateNestedPath(this,index,$currentItem)})})}
function updatePaths($item,$parent){var $pathField=$item.find('.paragraphs-dragdrop__path:first');var newPath=$parent.attr('data-paragraphs-dragdrop-path');$pathField.val(newPath)}
function updateNestedPath(childList,parentIndex,$parentListItem){var sortablePath=childList.getAttribute('data-paragraphs-dragdrop-path');var newParent=$parentListItem.parent().attr('data-paragraphs-dragdrop-path');sortablePath=newParent+"]["+parentIndex+sortablePath.substr(sortablePath.lastIndexOf("]"));childList.setAttribute('data-paragraphs-dragdrop-path',sortablePath);$(childList).children().each(function(childIndex){var $childListItem=$(this);updatePaths($childListItem,$(childList),childIndex);$(this).find('> div > ul').each(function(){var nestedChildList=this;updateNestedPath(nestedChildList,childIndex,$childListItem)})})}
function isAllowed(evt,originalEvent){var dragee=evt.dragged;var target=evt.to;var drageeType=dragee.dataset.paragraphsDragdropBundle;var allowedTypes=target.dataset.paragraphsDragdropAllowedTypes;var hasSameContainer=evt.to===evt.from;var allowed=hasSameContainer||(contains(drageeType,allowedTypes)&&hasRoom(target));targetAllowedClasses(target,allowed);return allowed}
function hasRoom(target){var cardinality=target.dataset.paragraphsDragdropCardinality;var occupants=target.childNodes.length;var isLimited=parseInt(cardinality,10)!==-1;var hasRoom=cardinality>occupants;return hasRoom||!isLimited}
function contains(candidate,set){set=set.split(',');var l=set.length;for(var i=0;i<l;i++){if(set[i]===candidate){return!0}}
return!1}
function startDragClasses(){$('html').addClass('is-dragging-paragraphs');$('.paragraphs-dragdrop__list').eq(0).css('min-height',function(){return $(this).height()})}
function targetAllowedClasses(target,allowed){$('.is-droppable-target').removeClass('is-droppable-target');if(allowed){$(target).addClass('is-droppable-target')}}
function endDragClasses(){$('html').removeClass('is-dragging-paragraphs');$('.is-droppable-target').removeClass('is-droppable-target');$('.paragraphs-dragdrop__list').eq(0).removeAttr('style')}
window.addEventListener('touchmove',function(){})}}})(jQuery,Drupal)