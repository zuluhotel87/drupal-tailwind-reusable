(function($,Drupal,once){Drupal.behaviors.webformCheckboxesAllorNone={attach:function(context){$(once('webform-checkboxes-all-or-none','[data-options-all], [data-options-none]',context)).each(function(){var $element=$(this);var options_all_value=$element.data('options-all');var options_none_value=$element.data('options-none');var $checkboxes=$element.find('input[type="checkbox"]');var $options=$checkboxes.not('[value="'+options_all_value+'"]').not('[value="'+options_none_value+'"]');var $options_all=$element.find(':checkbox[value="'+options_all_value+'"]');var $options_none=$element.find(':checkbox[value="'+options_none_value+'"]');if($options_all.length){$options_all.on('click',toggleCheckAllEventHandler);if($options_all.prop('checked')){toggleCheckAllEventHandler()}}
if($options_none.length){$options_none.on('click',toggleCheckNoneEventHandler);toggleCheckNoneEventHandler()}
$options.on('click',toggleCheckboxesEventHandler);toggleCheckboxesEventHandler();function toggleCheckAllEventHandler(){if($options_all.prop('checked')){if($options_none.is(':checked')){$options_none.prop('checked',!1).trigger('change',['webform.states'])}
$options.not(':checked').prop('checked',!0).trigger('change',['webform.states'])}else{$options.filter(':checked').prop('checked',!1).trigger('change',['webform.states'])}}
function toggleCheckNoneEventHandler(){if($options_none.prop('checked')){$checkboxes.not('[value="'+options_none_value+'"]').filter(':checked').prop('checked',!1).trigger('change',['webform.states'])}}
function toggleCheckboxesEventHandler(){var isAllChecked=($options.filter(':checked').length===$options.length);if($options_all.length&&$options_all.prop('checked')!==isAllChecked){$options_all.prop('checked',isAllChecked).trigger('change',['webform.states'])}
var isOneChecked=$options.is(':checked');if($options_none.length&&isOneChecked){$options_none.prop('checked',!1).trigger('change',['webform.states'])}}})}}})(jQuery,Drupal,once)