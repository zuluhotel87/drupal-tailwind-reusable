(function($,Drupal,drupalSettings,once){Drupal.behaviors.webformElementStates={attach:function(context){$(once('webform-element-states-condition','.webform-states-table--condition',context)).each(function(){var $condition=$(this);var $selector=$condition.find('.webform-states-table--selector select');var $value=$condition.find('.webform-states-table--value input');var $trigger=$condition.find('.webform-states-table--trigger select');$value.autocomplete({minLength:0}).on('focus',function(){$value.autocomplete('search','')});$trigger.on('change',function(){$selector.trigger('change')});$selector.on('change',function(){var selector=$selector.val();var sourceKey=drupalSettings.webformElementStates.selectors[selector];var source=drupalSettings.webformElementStates.sources[sourceKey];var notPattern=($trigger.val().indexOf('pattern')===-1);if(source&&notPattern){$value.autocomplete('option','source',source).addClass('form-autocomplete')}else{$value.autocomplete('option','source',[]).removeClass('form-autocomplete')}
var off=/chrom(e|ium)/.test(window.navigator.userAgent.toLowerCase())?'chrome-off-'+Math.floor(Math.random()*100000000):'off';$value.attr('autocomplete',off)}).trigger('change')});var $state=$(context).find('.webform-states-table--state select');if($state.length){$(once('webform-element-states-state',$state)).on('change',toggleRequiredCheckbox);toggleRequiredCheckbox()}}};var requiredChecked=null;function toggleRequiredCheckbox(){var $input=$('input[name="properties[required]"]');if(!$input.length){return}
var required=!1;$('.webform-states-table--state select').each(function(){var value=$(this).val();if(value==='required'||value==='optional'){required=!0}});if(required){requiredChecked=$input.prop('checked');$input.attr('disabled',!0);$input.prop('checked',!0)}else{$input.attr('disabled',!1);if(requiredChecked!==null){$input.prop('checked',requiredChecked);requiredChecked=null}}
$input.trigger('change')}})(jQuery,Drupal,drupalSettings,once)