(function($,Drupal,once){Drupal.facets=Drupal.facets||{};Drupal.facets.initTagify=function(context,settings){const links=$(once('tagify-widget','.js-facets-tagify'));if(links.length>0){links.each(function(index,widget){const $widget=$(widget);const $widgetLinks=$widget.find('.facet-item > a');const $whitelist=[];const $selected=[];$widgetLinks.each(function(key,link){const $link=$(link);const value=link.querySelector('.facet-item__value').textContent;const count=link.querySelector('.facet-item__count').textContent;$whitelist.push({value:$link.attr('href'),text:`${value.trim()} ${count.trim()}`,});if($link.hasClass('is-active')){$selected.push({value:$link.attr('href'),text:value,count,})}});let input=document.querySelector('input.js-facets-tagify');if(!input){input=document.createElement('input');input.setAttribute('class','tagify-input');this.before(input)}
input.value=JSON.stringify($selected);this.before(input);function highlightMatchingLetters(inputTerm,searchTerm){const escapedSearchTerm=searchTerm.replace(/[.*+?^${}()|[\]\\]/g,'\\$&',);const regex=new RegExp(`(${escapedSearchTerm})`,'gi');if(!escapedSearchTerm){return inputTerm}
return inputTerm.replace(regex,'<strong>$1</strong>')}
function tagTemplate(tagData){const entityIdDiv=parseInt(input.dataset.showEntityId,10)&&tagData.entity_id?`<div id="tagify__tag-items" class="tagify__tag_with-entity-id"><div class='tagify__tag__entity-id-wrap'><span class='tagify__tag-entity-id'>${tagData.entity_id}</span></div><span class='tagify__tag-text'>${tagData.value}</span></div>`:`<div id="tagify__tag-items"><span class='tagify__tag-facets-text'>${tagData.text}</span><span class="tagify__tag-facets-count"> ${tagData.count}<span></div>`;return `<tag title="${tagData.text}"
            contenteditable='false'
            spellcheck='false'
            tabIndex="0"
            class="tagify__tag ${tagData.class ? tagData.class : ''}"
            ${this.getAttributes(tagData)}>
              <x id="tagify__tag-remove-button" class='tagify__tag__removeBtn' role='button' aria-label='remove tag'></x>
              ${entityIdDiv}
          </tag>`}
function suggestionItemTemplate(tagData){return `<div ${this.getAttributes(
            tagData,
          )} class='tagify__dropdown__item ${
            tagData.class ? tagData.class : ''
          }' tabindex="0" role="option">${highlightMatchingLetters(
            tagData.text,
            this.state.inputText,
          )}</div>`}
const tagify=new Tagify(input,{dropdown:{enabled:0,highlightFirst:!0,searchKeys:['text'],fuzzySearch:!!parseInt(settings.tagify.tagify_facets_widget.match_operator,10,),maxItems:settings.tagify.tagify_facets_widget.max_items??Infinity,},templates:{tag:tagTemplate,dropdownItem:suggestionItemTemplate,dropdownFooter(){return''},},whitelist:$whitelist,enforceWhitelist:!0,editTags:!1,placeholder:settings.tagify.tagify_facets_widget.placeholder,});Sortable.create(tagify.DOM.scope,{draggable:`.${tagify.settings.classNames.tag}:not(tagify__input)`,forceFallback:!0,onEnd(){tagify.updateValueByDOMTags()},});tagify.on('add',function(e){const{value}=e.detail.data;e.preventDefault();$widget.trigger('facets_filter',[value])});tagify.on('remove',function(e){const{value}=e.detail.data;e.preventDefault();$widget.trigger('facets_filter',[value])})})}};Drupal.behaviors.facetsTagifyWidget={attach(context,settings){Drupal.facets.initTagify(context,settings)},}})(jQuery,Drupal,once)