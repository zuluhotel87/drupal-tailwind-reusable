((Drupal,once,{computePosition,offset,shift,flip})=>{Drupal.theme.ginTooltipWrapper=(dataset,title)=>`<div class="gin-tooltip ${dataset.drupalTooltipClass || ''}">
      ${dataset.drupalTooltip || title}
    </div>`;Drupal.behaviors.ginTooltip={attach:(context)=>{Drupal.ginTooltip.init(context)},};Drupal.ginTooltip={init:function(context){once('ginTooltipInit','[data-gin-tooltip]',context).forEach((trigger)=>{const title=trigger.title;if(title){trigger.title=''}
trigger.insertAdjacentHTML('afterend',Drupal.theme.ginTooltipWrapper(trigger.dataset,title),);const tooltip=trigger.nextElementSibling;const updatePosition=()=>{this.computePosition(trigger,tooltip)};const ro=new ResizeObserver(updatePosition);ro.observe(trigger);const mo=new MutationObserver(updatePosition);mo.observe(trigger,{attributes:!0,childList:!0,subtree:!0,});trigger.addEventListener('mouseover',updatePosition);trigger.addEventListener('focus',updatePosition)},)},computePosition:function(trigger,tooltip,placement='bottom-end'){computePosition(trigger,tooltip,{strategy:'absolute',placement:trigger.dataset.drupalTooltipPosition||placement,middleware:[flip({padding:16}),offset(6),shift({padding:16}),],}).then(({x,y})=>{Object.assign(tooltip.style,{'inset-inline-start':`${x}px`,'inset-block-start':`${y}px`,})})},}})(Drupal,once,FloatingUIDOM)