((Drupal,drupalSettings)=>{Drupal.behaviors.ginSettings={attach:function attach(context){Drupal.ginSettings.init(context)},};Drupal.ginSettings={init:function(context){context.querySelectorAll('input[name="enable_darkmode"]').forEach(el=>el.addEventListener('change',e=>{const darkmode=e.currentTarget.value;const accentColorPreset=document.querySelector('[data-drupal-selector="edit-preset-accent-color"] input:checked').value;const focusColorPreset=document.querySelector('select[name="preset_focus_color"]').value;this.darkmode(darkmode);if(accentColorPreset==='custom'){const accentColorSetting=document.querySelector('input[name="accent_color"]').value;Drupal.ginAccent.setCustomAccentColor(accentColorSetting)}else{Drupal.ginAccent.setAccentColor(accentColorPreset)}
if(focusColorPreset==='custom'){const focusColorSetting=document.querySelector('input[name="focus_color"]').value;Drupal.ginAccent.setCustomFocusColor(focusColorSetting)}else{Drupal.ginAccent.setFocusColor(focusColorPreset)}}));context.querySelectorAll('[data-drupal-selector="edit-preset-accent-color"] input').forEach(el=>el.addEventListener('change',e=>{const accentColorPreset=e.currentTarget.value;Drupal.ginAccent.clearAccentColor();Drupal.ginAccent.setAccentColor(accentColorPreset);if(accentColorPreset==='custom'){const accentColorSetting=document.querySelector('input[name="accent_color"]').value;Drupal.ginAccent.setCustomAccentColor(accentColorSetting)}}));context.querySelectorAll('input[name="accent_picker"]').forEach(el=>el.addEventListener('change',e=>{const accentColorSetting=e.currentTarget.value;document.querySelector('input[name="accent_color"]').value=accentColorSetting;Drupal.ginAccent.setCustomAccentColor(accentColorSetting)}));context.querySelectorAll('input[name="accent_color"]').forEach(el=>el.addEventListener('change',e=>{const accentColorSetting=e.currentTarget.value;document.querySelector('input[name="accent_picker"]').value=accentColorSetting;Drupal.ginAccent.setCustomAccentColor(accentColorSetting)}));document.querySelector('select[name="preset_focus_color"]').addEventListener('change',e=>{const focusColorPreset=e.currentTarget.value;Drupal.ginAccent.clearFocusColor();Drupal.ginAccent.setFocusColor(focusColorPreset);if(focusColorPreset==='custom'){const focusColorSetting=document.querySelector('input[name="focus_color"]').value;Drupal.ginAccent.setCustomFocusColor(focusColorSetting)}});document.querySelector('input[name="focus_picker"]').addEventListener('change',e=>{const focusColorSetting=e.currentTarget.value;document.querySelector('input[name="focus_color"]').value=focusColorSetting;Drupal.ginAccent.setCustomFocusColor(focusColorSetting)});document.querySelector('input[name="focus_color"]').addEventListener('change',e=>{const focusColorSetting=e.currentTarget.value;document.querySelector('input[name="focus_picker"]').value=focusColorSetting;Drupal.ginAccent.setCustomFocusColor(focusColorSetting)});document.querySelector('input[name="high_contrast_mode"]').addEventListener('change',e=>{const highContrastMode=e.currentTarget.matches(':checked');this.setHighContrastMode(highContrastMode)})},darkmode:function(darkmodeParam=null){const darkmodeEnabled=darkmodeParam!=null?darkmodeParam:drupalSettings.gin.darkmode;const darkmodeClass=drupalSettings.gin.darkmode_class;if(darkmodeEnabled==1||(darkmodeEnabled==='auto'&&window.matchMedia('(prefers-color-scheme: dark)').matches)){document.querySelector('html').classList.add(darkmodeClass)}else{document.querySelector('html').classList.remove(darkmodeClass)}
window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change',e=>{if(e.matches&&document.querySelector('input[name="enable_darkmode"]:checked').value==='auto'){document.querySelector('html').classList.add(darkmodeClass)}});window.matchMedia('(prefers-color-scheme: light)').addEventListener('change',e=>{if(e.matches&&document.querySelector('input[name="enable_darkmode"]:checked').value==='auto'){document.querySelector('html').classList.remove(darkmodeClass)}})},setHighContrastMode:function(param=null){const enabled=param!=null?param:drupalSettings.gin.highcontrastmode;const className=drupalSettings.gin.highcontrastmode_class;if(enabled===!0||enabled===1){document.body.classList.add(className)}else{document.body.classList.remove(className)}},}})(Drupal,drupalSettings)