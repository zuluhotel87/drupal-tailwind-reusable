<?php

namespace Drupal\shortcut;

use Drupal\webprofiler\Entity\ConfigEntityStorageDecorator;
use Drupal\Component\Uuid\UuidInterface;
use Drupal\Core\Cache\Cache;
use Drupal\Core\Cache\MemoryCache\MemoryCacheInterface;
use Drupal\Core\Config\ConfigFactoryInterface;
use Drupal\Core\Config\Entity\ConfigEntityStorage;
use Drupal\Core\Database\Connection;
use Drupal\Core\Database\Database;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Extension\ModuleHandlerInterface;
use Drupal\Core\Language\LanguageManagerInterface;
use Drupal\Core\Session\AccountInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * This file is auto-generated by the Webprofiler module.
 */
class ShortcutSetStorageDecorator extends ConfigEntityStorageDecorator implements \Drupal\shortcut\ShortcutSetStorageInterface
{
    public function assignUser(ShortcutSetInterface $shortcut_set, $account)
    {
        return $this->getOriginalObject()->assignUser($shortcut_set, $account);
    }
    public function unassignUser($account)
    {
        return $this->getOriginalObject()->unassignUser($account);
    }
    public function deleteAssignedShortcutSets(ShortcutSetInterface $entity)
    {
        return $this->getOriginalObject()->deleteAssignedShortcutSets($entity);
    }
    public function getAssignedToUser($account)
    {
        return $this->getOriginalObject()->getAssignedToUser($account);
    }
    public function getDisplayedToUser(AccountInterface $account): ShortcutSetInterface
    {
        return $this->getOriginalObject()->getDisplayedToUser($account);
    }
    public function countAssignedUsers(ShortcutSetInterface $shortcut_set)
    {
        return $this->getOriginalObject()->countAssignedUsers($shortcut_set);
    }
    public function getDefaultSet(AccountInterface $account)
    {
        return $this->getOriginalObject()->getDefaultSet($account);
    }
}
