/* @license GPL-2.0-or-later https://www.drupal.org/licensing/faq */
(($,Drupal,window)=>{Drupal.behaviors.MediaLibraryItemSelectionClaro={attach(){if(!once('media-library-selection-info-claro-event','html').length){return}
window.addEventListener('dialog:aftercreate',(e)=>{const $element=$(e.target);const moveCounter=($selectedCount,$buttonPane)=>{const $moveSelectedCount=$selectedCount.detach();$buttonPane.prepend($moveSelectedCount)};const $buttonPane=$element.closest('.media-library-widget-modal').find('.ui-dialog-buttonpane');if(!$buttonPane.length){return}
const $selectedCount=$buttonPane.find('.js-media-library-selected-count',);if($selectedCount.length){moveCounter($selectedCount,$buttonPane)}else{const selectedCountObserver=new MutationObserver(()=>{const $selectedCountFind=$buttonPane.find('.js-media-library-selected-count',);if($selectedCountFind.length){moveCounter($selectedCountFind,$buttonPane);selectedCountObserver.disconnect()}});selectedCountObserver.observe($buttonPane[0],{attributes:!1,childList:!0,characterData:!1,subtree:!0,})}})},}})(jQuery,Drupal,window);
(function($,Drupal){Drupal.behaviors.fileValidateAutoAttach={attach(context,settings){const $context=$(context);let elements;function initFileValidation(selector){$(once('fileValidate',$context.find(selector))).on('change.fileValidate',{extensions:elements[selector]},Drupal.file.validateExtension,)}
if(settings.file&&settings.file.elements){elements=settings.file.elements;Object.keys(elements).forEach(initFileValidation)}},detach(context,settings,trigger){const $context=$(context);let elements;function removeFileValidation(selector){$(once.remove('fileValidate',$context.find(selector))).off('change.fileValidate',Drupal.file.validateExtension,)}
if(trigger==='unload'&&settings.file&&settings.file.elements){elements=settings.file.elements;Object.keys(elements).forEach(removeFileValidation)}},};Drupal.behaviors.fileAutoUpload={attach(context){$(once('auto-file-upload','input[type="file"]',context)).on('change.autoFileUpload',Drupal.file.triggerUploadButton,)},detach(context,settings,trigger){if(trigger==='unload'){$(once.remove('auto-file-upload','input[type="file"]',context)).off('.autoFileUpload',)}},};Drupal.behaviors.fileButtons={attach(context){const $context=$(context);$context.find('.js-form-submit').on('mousedown',Drupal.file.disableFields);$context.find('.js-form-managed-file .js-form-submit').on('mousedown',Drupal.file.progressBar)},detach(context,settings,trigger){if(trigger==='unload'){const $context=$(context);$context.find('.js-form-submit').off('mousedown',Drupal.file.disableFields);$context.find('.js-form-managed-file .js-form-submit').off('mousedown',Drupal.file.progressBar)}},};Drupal.behaviors.filePreviewLinks={attach(context){$(context).find('div.js-form-managed-file .file a').on('click',Drupal.file.openInNewWindow)},detach(context){$(context).find('div.js-form-managed-file .file a').off('click',Drupal.file.openInNewWindow)},};Drupal.file=Drupal.file||{validateExtension(event){event.preventDefault();$('.file-upload-js-error').remove();const extensionPattern=event.data.extensions.replace(/,\s*/g,'|');if(extensionPattern.length>1&&this.value.length>0){const acceptableMatch=new RegExp(`\\.(${extensionPattern})$`,'gi');if(!acceptableMatch.test(this.value)){const error=Drupal.t('The selected file %filename cannot be uploaded. Only files with the following extensions are allowed: %extensions.',{'%filename':this.value.replace('C:\\fakepath\\',''),'%extensions':extensionPattern.replace(/\|/g,', '),},);$(this).closest('div.js-form-managed-file').prepend(`<div class="messages messages--error file-upload-js-error" aria-live="polite">${error}</div>`,);this.value='';event.stopImmediatePropagation()}}},triggerUploadButton(event){$(event.target).closest('.js-form-managed-file').find('.js-form-submit[data-drupal-selector$="upload-button"]').trigger('mousedown')},disableFields(event){const $clickedButton=$(this);$clickedButton.trigger('formUpdated');let $enabledFields=[];if($clickedButton.closest('div.js-form-managed-file').length>0){$enabledFields=$clickedButton.closest('div.js-form-managed-file').find('input.js-form-file')}
const $fieldsToTemporarilyDisable=$('div.js-form-managed-file input.js-form-file',).not($enabledFields).not(':disabled');$fieldsToTemporarilyDisable.prop('disabled',!0);setTimeout(()=>{$fieldsToTemporarilyDisable.prop('disabled',!1)},1000)},progressBar(event){const $clickedButton=$(this);const $progressId=$clickedButton.closest('div.js-form-managed-file').find('input.file-progress');if($progressId.length){const originalName=$progressId.attr('name');$progressId.attr('name',originalName.match(/APC_UPLOAD_PROGRESS|UPLOAD_IDENTIFIER/)[0],);setTimeout(()=>{$progressId.attr('name',originalName)},1000)}
setTimeout(()=>{$clickedButton.closest('div.js-form-managed-file').find('div.ajax-progress-bar').slideDown()},500);$clickedButton.trigger('fileUpload')},openInNewWindow(event){event.preventDefault();$(this).attr('target','_blank');window.open(this.href,'filePreview','toolbar=0,scrollbars=1,location=1,statusbar=1,menubar=0,resizable=1,width=500,height=550',)},}})(jQuery,Drupal);
((Drupal)=>{Drupal.theme.checkbox=()=>`<input type="checkbox" class="form-checkbox"/>`})(Drupal);
((Drupal)=>{Drupal.theme.checkbox=()=>'<input type="checkbox" class="form-checkbox form-boolean form-boolean--type-checkbox"/>'})(Drupal);
(($,Drupal)=>{Drupal.behaviors.ClickToSelect={attach(context){$(once('media-library-click-to-select','.js-click-to-select-trigger',context,),).on('click',(event)=>{event.preventDefault();const $input=$(event.currentTarget).closest('.js-click-to-select').find('.js-click-to-select-checkbox input');$input.prop('checked',!$input.prop('checked')).trigger('change')});$(once('media-library-click-to-select','.js-click-to-select-checkbox input',context,),).on('change',({currentTarget})=>{$(currentTarget).closest('.js-click-to-select').toggleClass('checked',$(currentTarget).prop('checked'))}).on('focus blur',({currentTarget,type})=>{$(currentTarget).closest('.js-click-to-select').toggleClass('is-focus',type==='focus')});$(once('media-library-click-to-select-hover','.js-click-to-select-trigger, .js-click-to-select-checkbox',context,),).on('mouseover mouseout',({currentTarget,type})=>{$(currentTarget).closest('.js-click-to-select').toggleClass('is-hover',type==='mouseover')})},}})(jQuery,Drupal);
((Drupal,once)=>{Drupal.behaviors.ginMediaLibrary={attach:function attach(){Drupal.ginMediaLibrary.init()},};Drupal.ginMediaLibrary={init:function(){once('media-library-select-all','.js-media-library-view[data-view-display-id="page"]').forEach(el=>{if(el.querySelectorAll('.js-media-library-item').length){const header=document.querySelector('.media-library-views-form');const selectAll=document.createElement('label');selectAll.className='media-library-select-all';selectAll.innerHTML=Drupal.theme('checkbox')+Drupal.t('Select all media');selectAll.children[0].addEventListener('click',e=>{const currentTarget=e.currentTarget;const checkboxes=currentTarget.closest('.js-media-library-view').querySelectorAll('.js-media-library-item .form-boolean');checkboxes.forEach(checkbox=>{const stateChanged=checkbox.checked!==currentTarget.checked;if(stateChanged){checkbox.checked=currentTarget.checked;checkbox.dispatchEvent(new Event('change'))}});const announcement=currentTarget.checked?Drupal.t('All @count items selected',{'@count':checkboxes.length}):Drupal.t('Zero items selected');Drupal.announce(announcement);this.bulkOperations()});header.prepend(selectAll)}
this.itemSelect()})},itemSelect:()=>{document.querySelectorAll('.media-library-view .js-click-to-select-trigger, .media-library-view .media-library-item .form-checkbox').forEach(trigger=>{trigger.addEventListener('click',()=>{const selectAll=document.querySelector('.media-library-select-all .form-boolean');const checkboxes=document.querySelectorAll('.media-library-view .media-library-item .form-boolean');const checkboxesChecked=document.querySelectorAll('.media-library-view .media-library-item .form-boolean:checked');if(selectAll&&selectAll.checked===!0&&checkboxes.length!==checkboxesChecked.length){selectAll.checked=!1;selectAll.dispatchEvent(new Event('change'))}else if(checkboxes.length===Array.from(checkboxes).filter(el=>el.checked===!0).length){selectAll.checked=!0;selectAll.dispatchEvent(new Event('change'))}
Drupal.ginMediaLibrary.bulkOperations()})})},bulkOperations:()=>{const bulkOperations=document.querySelector('.media-library-view [data-drupal-selector*="edit-header"]');const bulkOperationsStickyBar=document.querySelector('.media-library-views-form__bulk_form');if(bulkOperations&&document.querySelectorAll('.media-library-view .form-checkbox:checked').length>0){bulkOperations.classList.add('is-sticky');bulkOperationsStickyBar?.setAttribute('data-drupal-sticky-vbo',!0)}else{bulkOperations.classList.remove('is-sticky');bulkOperationsStickyBar?.setAttribute('data-drupal-sticky-vbo',!1)}},}})(Drupal,once);
(($,Drupal,window,{tabbable})=>{Drupal.MediaLibrary={currentSelection:[],};Drupal.AjaxCommands.prototype.updateMediaLibrarySelection=function(ajax,response,status,){Object.values(response.mediaIds).forEach((value)=>{Drupal.MediaLibrary.currentSelection.push(value)})};Drupal.behaviors.MediaLibraryTabs={attach(context){const $menu=$('.js-media-library-menu');$(once('media-library-menu-item',$menu.find('a'))).on('keypress',(e)=>{if(e.which===32){e.preventDefault();e.stopPropagation();$(e.currentTarget).trigger('click')}}).on('click',(e)=>{e.preventDefault();e.stopPropagation();const ajaxObject=Drupal.ajax({wrapper:'media-library-content',url:e.currentTarget.href,dialogType:'ajax',progress:{type:'fullscreen',message:Drupal.t('Processing...'),},});ajaxObject.success=function(response,status){return Promise.resolve(Drupal.Ajax.prototype.success.call(ajaxObject,response,status),).then(()=>{const mediaLibraryContent=document.getElementById('media-library-content',);if(mediaLibraryContent){const tabbableContent=tabbable(mediaLibraryContent);if(tabbableContent.length){tabbableContent[0].focus()}}})};ajaxObject.execute();$menu.find('.active-tab').remove();$menu.find('a').removeClass('active');$(e.currentTarget).addClass('active').html(Drupal.t('<span class="visually-hidden">Show </span>@title<span class="visually-hidden"> media</span><span class="active-tab visually-hidden"> (selected)</span>',{'@title':$(e.currentTarget).data('title')},),);Drupal.announce(Drupal.t('Showing @title media.',{'@title':$(e.currentTarget).data('title'),}),)})},};Drupal.behaviors.MediaLibraryViewsDisplay={attach(context){const $view=$(context).hasClass('.js-media-library-view')?$(context):$('.js-media-library-view',context);$view.closest('.views-element-container').attr('id','media-library-view');$(once('media-library-views-display-link','.views-display-link-widget, .views-display-link-widget_table',context,),).on('click',(e)=>{e.preventDefault();e.stopPropagation();const $link=$(e.currentTarget);let loadingAnnouncement='';let displayAnnouncement='';let focusSelector='';if($link.hasClass('views-display-link-widget')){loadingAnnouncement=Drupal.t('Loading grid view.');displayAnnouncement=Drupal.t('Changed to grid view.');focusSelector='.views-display-link-widget'}else if($link.hasClass('views-display-link-widget_table')){loadingAnnouncement=Drupal.t('Loading table view.');displayAnnouncement=Drupal.t('Changed to table view.');focusSelector='.views-display-link-widget_table'}
const ajaxObject=Drupal.ajax({wrapper:'media-library-view',url:e.currentTarget.href,dialogType:'ajax',progress:{type:'fullscreen',message:loadingAnnouncement||Drupal.t('Processing...'),},});if(displayAnnouncement||focusSelector){const success=ajaxObject.success;ajaxObject.success=function(response,status){success.bind(this)(response,status);if(focusSelector){$(focusSelector).focus()}
if(displayAnnouncement){Drupal.announce(displayAnnouncement)}}}
ajaxObject.execute();if(loadingAnnouncement){Drupal.announce(loadingAnnouncement)}})},};Drupal.behaviors.MediaLibraryItemSelection={attach(context,settings){const $form=$('.js-media-library-views-form, .js-media-library-add-form',context,);const currentSelection=Drupal.MediaLibrary.currentSelection;if(!$form.length){return}
const $mediaItems=$('.js-media-library-item input[type="checkbox"]',$form,);function disableItems($items){$items.prop('disabled',!0).closest('.js-media-library-item').addClass('media-library-item--disabled')}
function enableItems($items){$items.prop('disabled',!1).closest('.js-media-library-item').removeClass('media-library-item--disabled')}
function updateSelectionCount(remaining){const selectItemsText=remaining<0?Drupal.formatPlural(currentSelection.length,'1 item selected','@count items selected',):Drupal.formatPlural(remaining,'@selected of @count item selected','@selected of @count items selected',{'@selected':currentSelection.length,},);$('.js-media-library-selected-count').html(selectItemsText)}
function checkEnabled(){updateSelectionCount(settings.media_library.selection_remaining);if(currentSelection.length===settings.media_library.selection_remaining){disableItems($mediaItems.not(':checked'));enableItems($mediaItems.filter(':checked'))}else{enableItems($mediaItems)}}
$(once('media-item-change',$mediaItems)).on('change',(e)=>{const id=e.currentTarget.value;if(e.currentTarget.checked){if(!currentSelection.includes(id)){currentSelection.push(id)}}else if(currentSelection.includes(id)){currentSelection.splice(currentSelection.indexOf(id),1)}
const mediaLibraryModalSelection=document.querySelector('#media-library-modal-selection',);if(mediaLibraryModalSelection){mediaLibraryModalSelection.value=currentSelection.join();$(mediaLibraryModalSelection).trigger('change')}
document.querySelectorAll('.js-media-library-add-form-current-selection').forEach((item)=>{item.value=currentSelection.join()})});checkEnabled();$(once('media-library-selection-change',$form.find('#media-library-modal-selection'),),).on('change',(e)=>{checkEnabled()});currentSelection.forEach((value)=>{$form.find(`input[type="checkbox"][value="${value}"]`).prop('checked',!0).trigger('change')});if(!once('media-library-selection-info','html').length){return}
window.addEventListener('dialog:aftercreate',()=>{const $buttonPane=$('.media-library-widget-modal .ui-dialog-buttonpane',);if(!$buttonPane.length){return}
$buttonPane.append(Drupal.theme('mediaLibrarySelectionCount'));updateSelectionCount(settings.media_library.selection_remaining)})},};Drupal.behaviors.MediaLibraryModalClearSelection={attach(){if(!once('media-library-clear-selection','html').length){return}
window.addEventListener('dialog:afterclose',()=>{Drupal.MediaLibrary.currentSelection.length=0})},};Drupal.theme.mediaLibrarySelectionCount=function(){return `<div class="media-library-selected-count js-media-library-selected-count" role="status" aria-live="polite" aria-atomic="true"></div>`}})(jQuery,Drupal,window,window.tabbable);
(function($,Drupal,drupalSettings){Drupal.Views={};Drupal.Views.parseQueryString=function(query){const args={};if(query.includes('?')){query=query.substring(query.indexOf('?')+1)}
let pair;const pairs=query.split('&');for(let i=0;i<pairs.length;i++){pair=pairs[i].split('=');if(pair[0]!=='q'){if(pair[1]){args[decodeURIComponent(pair[0].replace(/\+/g,' '))]=decodeURIComponent(pair[1].replace(/\+/g,' '))}else{args[decodeURIComponent(pair[0].replace(/\+/g,' '))]=''}}}
return args};Drupal.Views.parseViewArgs=function(href,viewPath){const returnObj={};const path=Drupal.Views.getPath(href);const viewHref=Drupal.url(viewPath).substring(drupalSettings.path.baseUrl.length,);if(viewHref&&path.startsWith(`${viewHref}/`)){returnObj.view_args=decodeURIComponent(path.substring(viewHref.length+1,path.length),);returnObj.view_path=path}
return returnObj};Drupal.Views.pathPortion=function(href){const protocol=window.location.protocol;if(href.startsWith(protocol)){href=href.substring(href.indexOf('/',protocol.length+2))}
return href};Drupal.Views.getPath=function(href){href=Drupal.Views.pathPortion(href);href=href.substring(drupalSettings.path.baseUrl.length,href.length);if(href.startsWith('?q=')){href=href.substring(3,href.length)}
const chars=['#','?','&'];for(let i=0;i<chars.length;i++){if(href.includes(chars[i])){href=href.substring(0,href.indexOf(chars[i]))}}
return href}})(jQuery,Drupal,drupalSettings);
(function($,Drupal,drupalSettings){Drupal.behaviors.ViewsAjaxView={};Drupal.behaviors.ViewsAjaxView.attach=function(context,settings){if(settings&&settings.views&&settings.views.ajaxViews){const{views:{ajaxViews},}=settings;Object.keys(ajaxViews||{}).forEach((i)=>{Drupal.views.instances[i]=new Drupal.views.ajaxView(ajaxViews[i])})}};Drupal.behaviors.ViewsAjaxView.detach=(context,settings,trigger)=>{if(trigger==='unload'){if(settings&&settings.views&&settings.views.ajaxViews){const{views:{ajaxViews},}=settings;Object.keys(ajaxViews||{}).forEach((i)=>{const selector=`.js-view-dom-id-${ajaxViews[i].view_dom_id}`;if($(selector,context).length){delete Drupal.views.instances[i];delete settings.views.ajaxViews[i]}})}}};Drupal.views={};Drupal.views.instances={};Drupal.views.ajaxView=function(settings){const selector=`.js-view-dom-id-${settings.view_dom_id}`;this.$view=$(selector);let ajaxPath=drupalSettings.views.ajax_path;if(ajaxPath.constructor.toString().includes('Array')){ajaxPath=ajaxPath[0]}
let queryString=window.location.search||'';if(queryString!==''){queryString=queryString.slice(1).replace(/q=[^&]+&?|page=[^&]+&?|&?render=[^&]+/,'');if(queryString!==''){queryString=(/\?/.test(ajaxPath)?'&':'?')+queryString}}
this.element_settings={url:ajaxPath+queryString,submit:settings,httpMethod:'GET',setClick:!0,event:'click',selector,progress:{type:'fullscreen'},};this.settings=settings;this.$exposed_form=$(`form#views-exposed-form-${settings.view_name.replace(
        /_/g,
        '-',
      )}-${settings.view_display_id.replace(/_/g, '-')}`,);once('exposed-form',this.$exposed_form).forEach(this.attachExposedFormAjax.bind(this),);once('ajax-pager',this.$view.filter(this.filterNestedViews.bind(this)),).forEach(this.attachPagerAjax.bind(this));const selfSettings=$.extend({},this.element_settings,{event:'RefreshView',base:this.selector,httpMethod:'GET',element:this.$view.get(0),});this.refreshViewAjax=Drupal.ajax(selfSettings)};Drupal.views.ajaxView.prototype.attachExposedFormAjax=function(){const that=this;this.exposedFormAjax=[];$('input[type=submit], button[type=submit], input[type=image]',this.$exposed_form,).not('[data-drupal-selector=edit-reset]').each(function(index){const selfSettings=$.extend({},that.element_settings,{base:$(this).attr('id'),element:this,});that.exposedFormAjax[index]=Drupal.ajax(selfSettings)})};Drupal.views.ajaxView.prototype.filterNestedViews=function(){return!this.$view.parents('.view').length};Drupal.views.ajaxView.prototype.attachPagerAjax=function(){this.$view.find('.js-pager__items a, th.views-field a, .attachment .views-summary a',).each(this.attachPagerLinkAjax.bind(this))};Drupal.views.ajaxView.prototype.attachPagerLinkAjax=function(id,link){const $link=$(link);const viewData={};const href=$link.attr('href');$.extend(viewData,this.settings,Drupal.Views.parseQueryString(href),Drupal.Views.parseViewArgs(href,this.settings.view_base_path),);const selfSettings=$.extend({},this.element_settings,{submit:viewData,base:!1,element:link,httpMethod:'GET',});this.pagerAjax=Drupal.ajax(selfSettings)}})(jQuery,Drupal,drupalSettings);
